/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import java.awt.FileDialog;
import java.awt.HeadlessException;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import negocio.ArbolAVL;
import negocio.ArbolB;
import negocio.ArbolBinarioBusqueda;
import negocio.ArbolBusquedaMVias;
import negocio.agenda.Contacto;
import negocio.ExceptionArbolOrdenInvalido;
import negocio.IArbolBusqueda;
import negocio.agenda.AccesoAleatorio;

/**
 *
 * @author HP
 */
public class FormAgenda extends javax.swing.JFrame {

    /**
     * Creates new form FormAgenda
     */
    IArbolBusqueda arbol;
    /**
     * ruta de trabajo de archivo
     */
    String ruta;
    //  File file;
    List<Contacto> listaDeContactos;
    DefaultListModel model;
    DefaultListModel modelo2;

    public FormAgenda() {
        initComponents();
        ruta = "";
        model = new DefaultListModel();
        modelo2 = new DefaultListModel();
        Date fechaActual = new Date();
        System.out.println(fechaActual);
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/YYYY");
        labelFecha.setText(formato.format(fechaActual));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        TX1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        TX2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        BT1 = new javax.swing.JButton();
        BT2 = new javax.swing.JButton();
        BT3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        TXA1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        labelFecha = new java.awt.Label();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem9 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuAltura = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuNivel = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenuSize = new javax.swing.JMenuItem();

        jMenuItem8.setText("jMenuItem8");

        jMenuItem7.setText("jMenuItem7");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setToolTipText("Telefono");

        TX1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TX1.setToolTipText("Nombre");
        TX1.setSelectionColor(new java.awt.Color(255, 51, 51));
        TX1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TX1FocusGained(evt);
            }
        });
        TX1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TX1MouseReleased(evt);
            }
        });
        TX1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TX1ActionPerformed(evt);
            }
        });
        TX1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TX1KeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Nombre :");

        TX2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TX2.setToolTipText("Telefono");
        TX2.setSelectionColor(new java.awt.Color(255, 51, 51));
        TX2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TX2FocusGained(evt);
            }
        });
        TX2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TX2KeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Tel√©fono:");

        BT1.setBackground(new java.awt.Color(255, 51, 51));
        BT1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/iconos/agregar-usuarios-icono-3782-48.png"))); // NOI18N
        BT1.setEnabled(false);
        BT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT1ActionPerformed(evt);
            }
        });

        BT2.setBackground(new java.awt.Color(255, 51, 51));
        BT2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/iconos/vcard-eliminar-icono-9724-32.png"))); // NOI18N
        BT2.setEnabled(false);
        BT2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT2ActionPerformed(evt);
            }
        });

        BT3.setBackground(new java.awt.Color(255, 51, 51));
        BT3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/iconos/buscar-buscar-ampliar-icono-6707-48.png"))); // NOI18N
        BT3.setEnabled(false);
        BT3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT3ActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(0, 102, 204));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Opciones/Operaciones ");

        jList1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51)));
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setToolTipText("");
        jList1.setName(""); // NOI18N
        jList1.setSelectionBackground(new java.awt.Color(255, 51, 51));
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Lista de Contactos");

        jList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList2ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jList2);

        TXA1.setEditable(false);
        TXA1.setColumns(20);
        TXA1.setFont(new java.awt.Font("Roboto", 1, 10)); // NOI18N
        TXA1.setRows(5);
        jScrollPane3.setViewportView(TXA1);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Detalles del Contacto");

        txtCorreo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCorreo.setToolTipText("Correo");
        txtCorreo.setSelectionColor(new java.awt.Color(255, 51, 51));
        txtCorreo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCorreoFocusGained(evt);
            }
        });
        txtCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreoKeyTyped(evt);
            }
        });

        txtDireccion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDireccion.setToolTipText("Direcci√≥n");
        txtDireccion.setSelectionColor(new java.awt.Color(255, 51, 51));
        txtDireccion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDireccionFocusGained(evt);
            }
        });
        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Direcci√≥n:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Correo:");

        labelFecha.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        labelFecha.setText("dd/mm/yyyy");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Fecha");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(19, 19, 19)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel1)
                                                    .addComponent(jLabel3)))
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(TX1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                            .addComponent(TX2)
                                            .addComponent(txtCorreo)
                                            .addComponent(txtDireccion)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(BT1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(BT3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(BT2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(labelFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(101, 101, 101)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(TX1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TX2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(BT3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BT1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BT2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))
                        .addContainerGap())))
        );

        TX1.getAccessibleContext().setAccessibleName("");
        TX1.getAccessibleContext().setAccessibleDescription("");

        jMenuBar1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agenda telef√≥nica", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 14), new java.awt.Color(255, 51, 51))); // NOI18N
        jMenuBar1.setForeground(new java.awt.Color(255, 0, 51));

        jMenu1.setText("Archivo");

        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/iconos/iconoOpenDoc.png"))); // NOI18N
        jMenuItem5.setText("Abrir");
        jMenuItem5.setEnabled(false);
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);
        jMenu1.add(jSeparator1);

        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/iconos/iconoSaveAs.png"))); // NOI18N
        jMenuItem9.setText("Guardar como");
        jMenuItem9.setEnabled(false);
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem9);
        jMenu1.add(jSeparator2);

        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/iconos/icono-cerrar-doc.png"))); // NOI18N
        jMenuItem10.setText("Cerrar");
        jMenuItem10.setEnabled(false);
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem10);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Seleccionar √Årbol");

        jMenuItem2.setText("Arbol Binario de Busqueda");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);
        jMenu3.add(jSeparator3);

        jMenuItem1.setText("Arbol AVL");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);
        jMenu3.add(jSeparator4);

        jMenuItem3.setText("Arbol Busqueda M-Vias");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);
        jMenu3.add(jSeparator5);

        jMenuItem4.setText("Arbol B");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Operaciones Del Arbol");

        jMenuAltura.setText("Altura");
        jMenuAltura.setEnabled(false);
        jMenuAltura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAlturaActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuAltura);
        jMenu2.add(jSeparator6);

        jMenuNivel.setText("Nivel");
        jMenuNivel.setEnabled(false);
        jMenuNivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNivelActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuNivel);
        jMenu2.add(jSeparator7);

        jMenuSize.setText("Size");
        jMenuSize.setEnabled(false);
        jMenuSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSizeActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuSize);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // inicializa un arbol binario busqueda
        arbol = new ArbolBinarioBusqueda();
        cargarAlArbolContactosExistenteEnElFile();
        validarBotones();

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // inicializa un arbol AVL
        arbol = new ArbolAVL();
        cargarAlArbolContactosExistenteEnElFile();
        validarBotones();

    }//GEN-LAST:event_jMenuItem1ActionPerformed
    private void validarBotones() {
        BT1.setEnabled(true);
        BT2.setEnabled(true);
        BT3.setEnabled(true);
        jMenuItem5.setEnabled(true);
        jMenuItem9.setEnabled(true);
        jMenuItem10.setEnabled(true);
        jMenuAltura.setEnabled(true);
        jMenuNivel.setEnabled(true);
        jMenuSize.setEnabled(true);
    }

    private void actualizarListaDeContactos() {
        listaDeContactos = arbol.recorridoEnInOrden();
        model = new DefaultListModel();
        jList1.setModel(model);

        for (int i = 0; i < listaDeContactos.size(); i++) {
            Contacto c = listaDeContactos.get(i);
            if (c.isActivo()) {
                model.addElement(c);
            }
        }
        jList1.setSelectedIndex(0);
    }

    //si caso == true ..para buscar solo por nombre
    private Contacto getContactoValido(boolean caso) {
        try {
            String nombre = TX1.getText().trim();
            String correo = txtCorreo.getText().isEmpty() ? Contacto.datosVacio() : txtCorreo.getText().trim();
            String direccion = txtDireccion.getText().isEmpty() ? "" : txtDireccion.getText().trim().toLowerCase();

            if (nombre.equals("") && !TX2.getText().equals("")) {
                return Contacto.contactoVacio();
            } else if (!nombre.equals("") && TX2.getText().equals("") && caso == true) {
                return new Contacto(nombre.toUpperCase(), (Integer) 0, true);

            } else if (!nombre.equals("") && TX2.getText().equals("") && caso == false) {
                return Contacto.contactoVacio();
            }
            Integer nroTelefono = Integer.parseInt(TX2.getText().trim());
            if (!correo.equals(Contacto.datosVacio())) {
                if (!Contacto.esCorreoValido(correo)) {
                    JOptionPane.showMessageDialog(this, "Correo No Valido", "Ingrese un correo valido", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            return new Contacto(nombre.toUpperCase(), nroTelefono, correo, direccion, true);

        } catch (NumberFormatException ex) {
            return Contacto.contactoVacio();
        }
    }

    //metodo para ingresar un arbol M-Vias
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        String entrada = JOptionPane.showInputDialog("Ingrese un orden mayor o igual a 3: ", 3);
        try {
            int orden = Integer.parseInt(entrada.trim());
            arbol = new ArbolBusquedaMVias(orden);
            validarBotones();
            cargarAlArbolContactosExistenteEnElFile();

        } catch (NumberFormatException ex) {
            JOptionPane.showConfirmDialog(rootPane, "Ingrese valores validos para el orden");
        } catch (ExceptionArbolOrdenInvalido ex) {
            Logger.getLogger(FormAgenda.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void validarRutaDeArchivo() {
        if (ruta.equals("")) {
            //hay darle un ruta (esta creando nuevos contacto dato.txt
            ruta = System.getProperties().getProperty("user.dir") + "\\src\\datos\\contacto.txt";
            //para obtener la direccion del archivo 
            File file = new File(ruta);
            try {
                boolean sw = file.createNewFile();  //crea el archivo sino existe 
                this.cargarAlArbolContactosExistenteEnElFile();
                //   System.out.println("cargo dato");
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
    }

    void cargarAlArbolContactosExistenteEnElFile() {
        File file = new File(ruta);
        if (file.isFile()) {
            // System.out.println("Entro a cargar");
            List<Contacto> list = AccesoAleatorio.listaDeContactosEnArchivo(file);
            for (int i = 0; i < list.size(); i++) {
                Contacto aux = list.get(i);
                if (aux.isActivo()) {
                    arbol.insertar(aux);
                }
            }
            actualizarListaDeContactos();
            // System.out.println("fue a actualizar");
        }
    }

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        String entrada = JOptionPane.showInputDialog("Ingrese un orden mayor o igual a 3: ", 3);
        try {
            int orden = Integer.parseInt(entrada.trim());
            arbol = new ArbolB(orden);
            validarBotones();
            cargarAlArbolContactosExistenteEnElFile();

        } catch (NumberFormatException ex) {
            JOptionPane.showConfirmDialog(rootPane, "Ingrese valores validos para el orden");
        } catch (ExceptionArbolOrdenInvalido ex) {
            Logger.getLogger(FormAgenda.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed
    //evento JList1 para obtener un contacto selecciondo
    public void abrirArchivo() {
        System.out.println("Abrir archivo");
        FileDialog jD1;
        jD1 = new FileDialog(this, "Ingrese un Archivo de Contactos ", FileDialog.LOAD);
        jD1.setVisible(true);
        try {
            if (jD1.getFile() != null) {
                ruta = jD1.getDirectory() + jD1.getFile();
                // System.out.println(ruta);
                File externo = new File(ruta);
                //  System.out.println(jD1.getFile());
                if (externo.isFile()) {
                    this.cargarAlArbolContactosExistenteEnElFile();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Este objeto no es un archivo", "  ERROR FILE ", HEIGHT);
                }
            }
        } catch (HeadlessException ex) {
            System.out.println("hubo error al abrir un archivo");
        }
    }

    //aqui va abrir archivo de contactos 
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        try {
            System.out.println("abrir archi de contacto");
            String dir = System.getProperties().getProperty("user.dir") + "\\src\\datos\\contacto.txt";
            if (ruta.equals(dir)) {
                int c = JOptionPane.showConfirmDialog(this, "Desea guardar Contactos");
                if (c == 0) {
                    this.guardarComoArchivo();
                    return;
                } else if (c == 1) {
                    this.vaciarArchivo();
                    this.cerrarArchivo();
                }
                return;
            } else if (!ruta.equals(dir) && !ruta.equals("")) {
                AccesoAleatorio.crearFileContactos(new File(ruta));
                System.out.println("va a compactar");
                //   AccesoAleatorio.compactarArchivo(new File(ruta));
                System.out.println("salio de compactar");
                AccesoAleatorio.cerrar();
                JOptionPane.showMessageDialog(this, "Debe cerrar el Archivo Actual");
                return;
            }
            //aqui ruta==""
            this.abrirArchivo();
        } catch (HeadlessException | IOException ex) {
            System.out.println("Error al abrir ");
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    public void vaciarArchivo() throws IOException {
        File file = new File(ruta);
        System.out.println("entro a eliminar esta ruta " + ruta);
        BufferedWriter bw = new BufferedWriter(new FileWriter(file));
        bw.write("");
        bw.close();
        ruta = "";
    }

    private boolean guardarComoArchivo() throws IOException {
        System.out.println("entro a guardar");
        File file = new File(ruta);
        JFileChooser jF1 = new JFileChooser();
        try {
            if (jF1.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                String destino = jF1.getSelectedFile().getAbsolutePath() + ".txt";   //ruta destino
                File externo = new File(destino);
                AccesoAleatorio.crearFileContactos(file);
                System.out.println("entro a guardar a la ruta : " + destino);
                AccesoAleatorio.moverUnArchivoAOtro(file, externo);
                vaciarArchivo();
                ruta = destino;
                file = new File(ruta);
                AccesoAleatorio.crearFileContactos(file);
                //  AccesoAleatorio.compactarArchivo(file);
                AccesoAleatorio.cerrar();
                //--------guardar externamente------------ 
                return true;
            }
        } catch (HeadlessException ex) {
            System.out.println("guardar como");
            System.out.println("hubo error al guardar como");
        }

        JOptionPane.showMessageDialog(this, "Error al guardar archivo", "ERROR AL GUARDA!!", JOptionPane.ERROR_MESSAGE);
        System.out.println("No hay archivo que guardar");

        System.out.println("Error al Guardar como");
        return false;
    }

    //metodo de Guardar como
    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        if (!ruta.equals("")) {
            try {
                //--------guardar externamente------------
                System.out.println("Se guardo =" + this.guardarComoArchivo());
            } catch (IOException ex) {
                Logger.getLogger(FormAgenda.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe insertar almenos un contacto", "No Inserta Nada", JOptionPane.WARNING_MESSAGE);
            System.out.println("Error al guardar");
        }

    }//GEN-LAST:event_jMenuItem9ActionPerformed
    public void cerrarArchivo() throws IOException {
        // File file =new File(ruta);
        this.arbol = new ArbolBinarioBusqueda();
        vaciarArchivo();
        DefaultListModel modeloLista = new DefaultListModel();
        jList1.setModel(modeloLista);
        jList2.setModel(modeloLista);
        TX1.setText("");
        TX2.setText("");
        TXA1.setText("");
        txtCorreo.setText("");
        txtDireccion.setText("");
        ruta = "";
    }

    //metodo de cerrar archivo
    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        System.out.println("entro a cerrar a archivo");
        String dir = System.getProperties().getProperty("user.dir") + "\\src\\datos\\contacto.txt";
        if (!ruta.equals("")) {
            try {
                if (ruta.equals(dir)) { // aqui elimina todo
                    //porque no se guardo en un Archivo
                    cerrarArchivo();

                } else {
                    //tiene que modificar el archivo(si hay datos eliminados)
                    AccesoAleatorio.crearFileContactos(new File(ruta));
                    //    AccesoAleatorio.compactarArchivo(new File(ruta));
                    AccesoAleatorio.cerrar();
                    this.arbol.vaciar();
                    DefaultListModel modeloLista = new DefaultListModel();
                    jList1.setModel(modeloLista);
                    jList2.setModel(modeloLista);
                    TX1.setText("");
                    TX2.setText("");
                    TXA1.setText("");
                    txtCorreo.setText("");
                    txtDireccion.setText("");
                    ruta = "";
                    JOptionPane.showMessageDialog(this, "Cerro el Archivo ", "Correctamente!", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (IOException ex) {
                Logger.getLogger(FormAgenda.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Error al cerrar archivo", "ERROR!!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jMenuItem10ActionPerformed

    //metodo que valida solo numeros
    private void TX2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TX2KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            //  getToolkit().beep();
            evt.consume();

        }
    }//GEN-LAST:event_TX2KeyTyped

    //valida que no entre contactos vacios
    private void BT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT1ActionPerformed
        Contacto contacto = getContactoValido(false);
        System.out.println("entro a insertar");
        if (!Contacto.esContactoVacio(contacto)) {
            this.validarRutaDeArchivo();
            //System.out.println("ruta");
            arbol.insertar(contacto);
            File file = new File(ruta);
            try {
                AccesoAleatorio.crearFileContactos(file);
                AccesoAleatorio.a√±adirContacto(contacto);
                AccesoAleatorio.cerrar();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error al insertar el contacto", "Mensaje de Error!!", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FormAgenda.class.getName()).log(Level.SEVERE, null, ex);
            }
            actualizarListaDeContactos();
        }
    }//GEN-LAST:event_BT1ActionPerformed

    public List<Contacto> buscarSimilares(Contacto c) {
        List<Contacto> similares = new LinkedList<>();
        byte control = 0;
//        System.out.println(listaDeContactos);
        for (int i = 0; i < listaDeContactos.size() && (control == 0 || control == 1); i++) {

            Contacto c2 = listaDeContactos.get(i);
            String nom1 = c.getNombre();
            String nom2 = c2.getNombre();
            if (nom1.equals(nom2)) {
                System.out.println("entro por supuesto");
                similares.add(c2);
                control = 1;
            } else {
                control = (byte) ((control == 1) ? 2 : 0);
            }
        }
        return similares;
    }

    private void BT3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT3ActionPerformed
        Contacto contacto = getContactoValido(true);
        jList2.setModel(modelo2);
        modelo2.clear();
        if (!Contacto.esContactoVacio(contacto)) {
            List<Contacto> similares = buscarSimilares(contacto);
            for (int i = 0; i < similares.size(); i++) {
                Contacto contactoACopiar = similares.get(i);
                modelo2.addElement(contactoACopiar);
            }
        }

    }//GEN-LAST:event_BT3ActionPerformed

    private Contacto devuelveContactoSelecto(JList<String> listaAUsar, DefaultListModel modelo) {
        listaAUsar.setModel(modelo);
        int index = listaAUsar.getLeadSelectionIndex();
        System.out.println("indice " + index);
        System.out.println("cantidad de elementos : " + modelo.size());

        Contacto contacto = (Contacto) modelo.getElementAt(index);
        return contacto;
    }
    private void BT2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT2ActionPerformed
        if (!arbol.esArbolVacio()) {
            Contacto contacto = this.devuelveContactoSelecto(jList1, model);
            arbol.eliminar(contacto);
            File file = new File(ruta);
            try {
                AccesoAleatorio.crearFileContactos(file);
                if (AccesoAleatorio.eliminarContacto(contacto.getNombre())) {
                    JOptionPane.showMessageDialog(this, "El contacto fue eliminado correctamente", "Eliminacion correcta", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Error intenta  eliminar un contacto inexistente", "Error!!", JOptionPane.ERROR_MESSAGE);
                }
            } catch (IOException ex) {
                System.out.println("Falla al eliminar");
            }
            actualizarListaDeContactos();
        } else {
            JOptionPane.showMessageDialog(this, "Error no hay datos para eliminar", "Error!!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BT2ActionPerformed
    public void mostrarDetalles(JList listaAUsar, DefaultListModel modelo) {
        Contacto contacto = devuelveContactoSelecto(listaAUsar, modelo);
        TXA1.setText("Nombre: " + contacto.getNombre() + '\n'
                + "Telefono:  " + contacto.getNroTelefono() + "\n"
                + "Correo:    " + contacto.getCorreo() + "\n"
                + "Direccion: " + contacto.getDireccion().toUpperCase());
    }
    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        try {
            mostrarDetalles(jList1, model);
        } catch (Exception ex) {
            System.out.println("hubo error mostar detalles!");
        }
    }//GEN-LAST:event_jList1ValueChanged

    private void jList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList2ValueChanged
        try {
            mostrarDetalles(jList2, modelo2);
        } catch (Exception ex) {
            System.out.println("hubo error al mostar detalle!");
        }
    }//GEN-LAST:event_jList2ValueChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int valor = JOptionPane.showConfirmDialog(rootPane, "¬øseguro que desea salir?");

        if (valor == 0) {
            String dir = System.getProperties().getProperty("user.dir") + "\\src\\datos\\contacto.txt";
            try {
                File file = new File(dir);
                if (file.delete()) {
                    System.out.println("se libero memoria");
                } else {
                    System.out.println("no se libero memoria");
                }

            } catch (Exception ex) {
                System.out.println("hubo un  error");
            }
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void TX1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TX1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TX1ActionPerformed

    private void TX1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TX1KeyTyped
        // TODO add your handling code here:
        int limiteDeTexto = 28;
        char validar = evt.getKeyChar();
        if (TX1.getText().length() == limiteDeTexto
                || Character.isDigit(validar)) {
            // getToolkit().beep();
            //elimina caracter q sea max al limite
            evt.consume();
        }

    }//GEN-LAST:event_TX1KeyTyped

    private void txtCorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoKeyTyped
        // TODO add your handling code here:
        int limiteDeTexto = 28;
        char validar = evt.getKeyChar();
        if (TX1.getText().length() == limiteDeTexto) {
            // getToolkit().beep();
            //elimina caracter q sea max al limite
            evt.consume();
        }


    }//GEN-LAST:event_txtCorreoKeyTyped

    private void txtDireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyTyped
        // TODO add your handling code here:
        int limiteDeTexto = 28;
        char validar = evt.getKeyChar();
        if (TX1.getText().length() == limiteDeTexto) {
            // getToolkit().beep();
            //elimina caracter q sea max al limite
            evt.consume();
        }

    }//GEN-LAST:event_txtDireccionKeyTyped

    private void jMenuNivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNivelActionPerformed
        // TODO add your handling code here:
        if (!arbol.esArbolVacio()) {
            int nivel = arbol.nivel();
            JOptionPane.showMessageDialog(this, "Nivel = " + nivel, "Nivel DEL ARBOL", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Informacion", "El Arbol esta Vacio", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuNivelActionPerformed

    private void jMenuAlturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAlturaActionPerformed
        // TODO add your handling code here:
        if (!arbol.esArbolVacio()) {
            int altura = arbol.altura();
            JOptionPane.showMessageDialog(this, "Altura = " + altura, "ALTURA DEL ARBOL", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "ALTURA DEL ARBOL", "Altura =  0", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuAlturaActionPerformed

    private void jMenuSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSizeActionPerformed
        // TODO add your handling code here:
        if (!arbol.esArbolVacio()) {
            int size = arbol.size();
            JOptionPane.showMessageDialog(this, "size = " + size, "Cantidad de Contactos en el Arbol", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "No hay ningun contacto registrado ", "Informacion ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuSizeActionPerformed

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionActionPerformed

    private void TX1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TX1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_TX1MouseReleased

    private void TX1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TX1FocusGained
        TX1.selectAll();
    }//GEN-LAST:event_TX1FocusGained

    private void TX2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TX2FocusGained
        TX2.selectAll();
    }//GEN-LAST:event_TX2FocusGained

    private void txtCorreoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCorreoFocusGained
         txtCorreo.selectAll();
    }//GEN-LAST:event_txtCorreoFocusGained

    private void txtDireccionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionFocusGained
        txtDireccion.selectAll();
    }//GEN-LAST:event_txtDireccionFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormAgenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT1;
    private javax.swing.JButton BT2;
    private javax.swing.JButton BT3;
    private javax.swing.JTextField TX1;
    private javax.swing.JTextField TX2;
    private javax.swing.JTextArea TXA1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuAltura;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuNivel;
    private javax.swing.JMenuItem jMenuSize;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private java.awt.Label labelFecha;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDireccion;
    // End of variables declaration//GEN-END:variables
}
